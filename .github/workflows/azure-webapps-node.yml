name: Azure Web App - Node.js CI/CD

on:
push:
  branches: [ "main" ]
workflow_dispatch:
  inputs:
    environment:
      description: 'Environment to deploy to'
      required: true
      default: 'dev'
      type: choice
      options:
      - dev
      - test
      - prod

env:
NODE_VERSION: '20.x'                # set this to the node version to use
AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project
PROJECT_NAME: 'content-creation'    # set this to your project name
LOCATION_CODE: 'euw'               # set this to your location code
LOCATION: 'westeurope'             # set this to your preferred location

# Feature flags
FEATURE_BUILD: true
FEATURE_INFRASTRUCTURE: true
FEATURE_DEPLOY: true

jobs:
build:
  if: env.FEATURE_BUILD == 'true'
  runs-on: ubuntu-latest
  steps:
  - uses: actions/checkout@v4

  - name: Set up Node.js
    uses: actions/setup-node@v4
    with:
      node-version: ${{ env.NODE_VERSION }}
      cache: 'npm'

  - name: npm install, build, and test
    run: |
      npm install
      npm run build --if-present
      npm run test --if-present
      
  - name: Zip artifact for deployment
    run: zip -r node-app.zip ./*
      
  - name: Upload artifact for deployment job
    uses: actions/upload-artifact@v4
    with:
      name: node-app
      path: node-app.zip

infrastructure:
  if: env.FEATURE_INFRASTRUCTURE == 'true'
  runs-on: ubuntu-latest
  needs: build
  environment: ${{ github.event.inputs.environment || 'dev' }}
    
  steps:
  - uses: actions/checkout@v4
  
  - name: Generate Resource Names
    id: generate-names
    run: |
      chmod +x ./infra/naming.sh
      while IFS= read -r line; do
        echo "$line" >> $GITHUB_ENV
      done < <(./infra/naming.sh ${{ github.event.inputs.environment || 'dev' }} ${{ env.LOCATION_CODE }} ${{ env.PROJECT_NAME }})
  
  - name: Azure Login
    uses: azure/login@v1
    with:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
  - name: Create Resource Group
    uses: azure/cli@v1
    with:
      inlineScript: |
        az group create --name ${{ env.RESOURCE_GROUP }} --location ${{ env.LOCATION }}
        
  - name: Deploy Bicep template
    uses: azure/arm-deploy@v1
    with:
      resourceGroupName: ${{ env.RESOURCE_GROUP }}
      template: ./infra/main.bicep
      parameters: ./infra/parameters.json
      parameters: >
        appName=${{ env.APP_NAME }}
        location=${{ env.LOCATION }}

deploy:
  if: env.FEATURE_DEPLOY == 'true'
  permissions:
    contents: none
  runs-on: ubuntu-latest
  needs: infrastructure
  environment:
    name: ${{ github.event.inputs.environment || 'dev' }}
    url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  steps:
  - name: Download artifact from build job
    uses: actions/download-artifact@v4
    with:
      name: node-app
        
  - name: Unzip artifact for deployment
    run: unzip node-app.zip
      
  - name: Azure Login
    uses: azure/login@v1
    with:
      client-id: ${{ secrets.AZURE_CLIENT_ID }}
      tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  - name: Generate Resource Names
    id: generate-names
    run: |
      chmod +x ./infra/naming.sh
      while IFS= read -r line; do
        echo "$line" >> $GITHUB_ENV
      done < <(./infra/naming.sh ${{ github.event.inputs.environment || 'dev' }} ${{ env.LOCATION_CODE }} ${{ env.PROJECT_NAME }})

  - name: 'Deploy to Azure WebApp'
    id: deploy-to-webapp
    uses: azure/webapps-deploy@v3
    with:
      app-name: ${{ env.APP_NAME }}
      package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
